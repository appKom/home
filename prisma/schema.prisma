generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model Article {
  id               Int      @id @default(autoincrement())
  title            String
  description      String
  imageUri         String
  imageDescription String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  author           Member   @relation(fields: [memberId], references: [id])
  memberId         Int
}

model Member {
  id        Int      @id @default(autoincrement())
  name      String
  href      String   @unique
  imageUri  String?
  isCurrent Boolean  @default(true)
  about     String?
  quote     String?
  email     String?  @unique
  phone     String?
  github    String?
  linkedin  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rolesByPeriod RoleByPeriod[]
  Article       Article[]
  ProjectMember ProjectMember[]
}

model RoleByPeriod {
  id       Int      @id @default(autoincrement())
  period   String
  role     RoleEnum
  memberId Int
  member   Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@unique([memberId, period])
}

enum ProjectRoles {
  Prosjektleder
  Bidragsyter
}

model ProjectMember {
  id        Int          @id @default(autoincrement())
  projectId Int
  memberId  Int
  Project   Project      @relation(fields: [projectId], references: [id])
  Member    Member       @relation(fields: [memberId], references: [id])
  Role      ProjectRoles
}

model Project {
  id               Int             @id @default(autoincrement())
  title            String
  shortDescription String
  description      String
  github           String
  imageUri         String
  techStack        String
  href             String
  link             String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  ProjectMember    ProjectMember[]
}

enum RoleEnum {
  Leder
  Nestleder
  Okonomiansvarlig @map("Ã˜konomiansvarlig")
  Medlem
}
